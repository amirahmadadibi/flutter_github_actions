name: "Build & Release"   # You can name it as you want

#basicly This means our action will be triggered whenever we push something to branch dev or test or do a PR on branch dev or test
on:
  pull_request: #case we want to trigger this action on pull requests
    branches: # which branches to trigger on
      - dev
      - test
  push: #case we want to trigger this action on pushes
    branches: # which branches to trigger on
      - dev
      - test


jobs:  # Telling what jobs we need to happen
  build:      # Specify the building name and machine
    name: Build & Release  # you can name the build whatever you want
    runs-on: ubuntu-latest # here we selected macos-latest to be able to get ios build

    steps:  # Steps to be done in the job
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Up Java
        uses: actions/setup-java@v3.12.0
        with:
          distribution: 'oracle'
          java-version: '17'

      - name: Set Up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.2'
          channel: 'stable'

      - name: Install Dependencies
        run: flutter pub get

      - name: Build APK
        run: flutter build apk --debug

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Releases
          path: |
            build/app/outputs/flutter-apk/app-release.apk
            

      - name: Extract version from pubspec.yaml
        id: extract_version
        run: |
          version=$(grep '^version: ' pubspec.yaml | cut -d ' ' -f 2 | tr -d '\r')
          echo "VERSION=$version" >> $GITHUB_ENV

      - name: Check if Tag Exists
        id: check_tag
        run: |
          if git rev-parse "v${{ env.VERSION }}" >/dev/null 2>&1; then
            echo "TAG_EXISTS=true" >> $GITHUB_ENV
          else
            echo "TAG_EXISTS=false" >> $GITHUB_ENV
          fi

      - name: Modify Tag
        if: env.TAG_EXISTS == 'true'
        id: modify_tag
        run: |
          new_version="${{ env.VERSION }}-build-${{ github.run_number }}"
          echo "VERSION=$new_version" >> $GITHUB_ENV
          
          

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/flutter-apk/app-release.apk,build/app/outputs/bundle/release/app-release.aab,build/ios_build.tar.gz"
          tag: v${{ env.VERSION }}
          token: ${{ secrets.TOKEN }}